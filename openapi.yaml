openapi: 3.0.1
info:
  title: yapki
  description: 'Yet another public key infrastructure
    at [https://yafra.org](https://yafra.org).'
  termsOfService: http://yafra.org/terms/
  contact:
    email: info@yafra.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about yapki
  url: https://yafra.org/yapki
servers:
- url: https://yafra.org/yapki/v1
tags:
- name: user
  description: user processes
  externalDocs:
    description: Find out more
    url: https://yafra.org/yapki/certificate
- name: administration
  description: Management of yapki
paths:
  /certificate:
    post:
      tags:
      - user
      summary: Add a new certificate to the store
      operationId: addcertificate
      requestBody:
        description: certificate object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
        required: true
      responses:
        "405":
          description: Invalid input
          content: {}
      security:
      - yapki_auth:
        - write:certificates
        - read:certificates
      x-codegen-request-body-name: body
    get:
      tags:
      - administration
      summary: Finds certificates by tags
      description: Muliple tags can be provided with comma separated strings.
      operationId: findcertificatesByTags
      parameters:
      - name: tags
        in: query
        description: Tags to filter by
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Certificate'
        "400":
          description: Invalid tag value
          content: {}
      deprecated: true
      security:
      - yapki_auth:
        - write:certificates
        - read:certificates
  /certificate/{serial}:
    get:
      tags:
      - user
      summary: Find certificate by serial
      description: Returns a single certificate
      operationId: getCertificate
      parameters:
      - name: serial
        in: path
        description: ID of certificate to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: certificate not found
          content: {}
      security:
      - api_key: []
    put:
      tags:
      - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateCertificate
      parameters:
      - name: serial
        in: path
        description: name that need to be updated
        required: true
        schema:
          type: string
      requestBody:
        description: Updated user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Certificate'
        required: true
      responses:
        "400":
          description: Invalid user supplied
          content: {}
        "404":
          description: User not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - user
      summary: Deletes a certificate
      operationId: deleteCertificate
      parameters:
      - name: api_key
        in: header
        schema:
          type: string
      - name: serial
        in: path
        description: certificate id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: certificate not found
          content: {}
      security:
      - yapki_auth:
        - write:certificates
        - read:certificates
  /user:
    post:
      tags:
      - administration
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        default:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
  /user/login:
    get:
      tags:
      - user
      summary: Logs user into the system
      operationId: loginUser
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        400:
          description: Invalid username/password supplied
          content: {}
  /user/logout:
    get:
      tags:
      - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        default:
          description: successful operation
          content: {}
  /user/{username}:
    get:
      tags:
      - administration
      summary: Get user by user name
      operationId: getUserByName
      parameters:
      - name: username
        in: path
        description: 'The name that needs to be fetched. Use user1 for testing. '
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Invalid username supplied
          content: {}
        "404":
          description: User not found
          content: {}
    put:
      tags:
      - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
      - name: username
        in: path
        description: name that need to be updated
        required: true
        schema:
          type: string
      requestBody:
        description: Updated user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "400":
          description: Invalid user supplied
          content: {}
        "404":
          description: User not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - administration
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
      - name: username
        in: path
        description: The name that needs to be deleted
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Invalid username supplied
          content: {}
        "404":
          description: User not found
          content: {}
  /admin/request:
    get:
      tags:
      - administration
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        default:
          description: successful operation
          content: {}
components:
  schemas:
    Certificate:
      required:
      - name
      - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: doggie
        photoUrls:
          type: array
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
        owner:
          $ref: '#/components/schemas/User'
        status:
          type: string
          description: certificate status in the store
          enum:
          - available
          - pending
          - sold
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          description: User Status
          format: int32
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  securitySchemes:
    yapki_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://yapki.yafra.org/oauth/dialog
          scopes:
            write:certificates: modify certificates in your account
            read:certificates: read your certificates
    api_key:
      type: apiKey
      name: api_key
      in: header
